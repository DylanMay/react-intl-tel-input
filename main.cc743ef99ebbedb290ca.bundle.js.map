{"version":3,"file":"main.cc743ef99ebbedb290ca.bundle.js","sources":["webpack:///./src/components/AllCountries.js"],"sourcesContent":["// Tell JSHint to ignore this warning: 'character may get silently deleted by one or more browsers'\n// jshint -W100\n\n// Array of country objects for the flag dropdown.\n// Each contains a name, country code (ISO 3166-1 alpha-2) and dial code.\n\n// Originally from https://github.com/mledoze/countries\n// then with a couple of manual re-arrangements to be alphabetical\n// then changed Kazakhstan from +76 to +7\n// and Vatican City from +379 to +39 (see issue 50)\n// and Caribean Netherlands from +5997 to +599\n// and Curacao from +5999 to +599\n// Removed:  Kosovo, Pitcairn Islands, South Georgia\n\n// UPDATE Sept 12th 2015\n// List of regions that have iso2 country codes, which I have chosen to omit:\n// (based on this information: https://en.wikipedia.org/wiki/List_of_country_calling_codes)\n// AQ - Antarctica - all different country codes depending on which 'base'\n// BV - Bouvet Island - no calling code\n// GS - South Georgia and the South Sandwich Islands -\n// 'inhospitable collection of islands' - same flag and calling code as Falkland Islands\n// HM - Heard Island and McDonald Islands - no calling code\n// PN - Pitcairn - tiny population (56), same calling code as New Zealand\n// TF - French Southern Territories - no calling code\n// UM - United States Minor Outlying Islands - no calling code\n\n// UPDATE the criteria of supported countries or territories (see issue 297)\n// Have an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n// Have a country calling code: https://en.wikipedia.org/wiki/List_of_country_calling_codes\n// Have a flag\n// Must be supported by libphonenumber: https://github.com/googlei18n/libphonenumber\n\n// Update: converted objects to arrays to save bytes!\n// Update: added 'priority' for countries with the same dialCode as others\n// Update: added array of area codes for countries with the same dialCode as others\n\n// So each country array has the following information:\n// [\n//    Country name,\n//    iso2 code,\n//    International dial code,\n//    Order (if >1 country with same dial code),\n//    Area codes (if >1 country with same dial code)\n// ]\nconst defaultCountriesData = [\n  ['Afghanistan (‫افغانستان‬‎)', 'af', '93'],\n  ['Albania (Shqipëri)', 'al', '355'],\n  ['Algeria (‫الجزائر‬‎)', 'dz', '213'],\n  ['American Samoa', 'as', '1684'],\n  ['Andorra', 'ad', '376'],\n  ['Angola', 'ao', '244'],\n  ['Anguilla', 'ai', '1264'],\n  ['Antigua and Barbuda', 'ag', '1268'],\n  ['Argentina', 'ar', '54'],\n  ['Armenia (Հայաստան)', 'am', '374'],\n  ['Aruba', 'aw', '297'],\n  ['Australia', 'au', '61', 0],\n  ['Austria (Österreich)', 'at', '43'],\n  ['Azerbaijan (Azərbaycan)', 'az', '994'],\n  ['Bahamas', 'bs', '1242'],\n  ['Bahrain (‫البحرين‬‎)', 'bh', '973'],\n  ['Bangladesh (বাংলাদেশ)', 'bd', '880'],\n  ['Barbados', 'bb', '1246'],\n  ['Belarus (Беларусь)', 'by', '375'],\n  ['Belgium (België)', 'be', '32'],\n  ['Belize', 'bz', '501'],\n  ['Benin (Bénin)', 'bj', '229'],\n  ['Bermuda', 'bm', '1441'],\n  ['Bhutan (འབྲུག)', 'bt', '975'],\n  ['Bolivia', 'bo', '591'],\n  ['Bosnia and Herzegovina (Босна и Херцеговина)', 'ba', '387'],\n  ['Botswana', 'bw', '267'],\n  ['Brazil (Brasil)', 'br', '55'],\n  ['British Indian Ocean Territory', 'io', '246'],\n  ['British Virgin Islands', 'vg', '1284'],\n  ['Brunei', 'bn', '673'],\n  ['Bulgaria (България)', 'bg', '359'],\n  ['Burkina Faso', 'bf', '226'],\n  ['Burundi (Uburundi)', 'bi', '257'],\n  ['Cambodia (កម្ពុជា)', 'kh', '855'],\n  ['Cameroon (Cameroun)', 'cm', '237'],\n  [\n    'Canada',\n    'ca',\n    '1',\n    1,\n    [\n      '204',\n      '226',\n      '236',\n      '249',\n      '250',\n      '289',\n      '306',\n      '343',\n      '365',\n      '387',\n      '403',\n      '416',\n      '418',\n      '431',\n      '437',\n      '438',\n      '450',\n      '506',\n      '514',\n      '519',\n      '548',\n      '579',\n      '581',\n      '587',\n      '604',\n      '613',\n      '639',\n      '647',\n      '672',\n      '705',\n      '709',\n      '742',\n      '778',\n      '780',\n      '782',\n      '807',\n      '819',\n      '825',\n      '867',\n      '873',\n      '902',\n      '905',\n    ],\n  ],\n  ['Cape Verde (Kabu Verdi)', 'cv', '238'],\n  ['Caribbean Netherlands', 'bq', '599', 1],\n  ['Cayman Islands', 'ky', '1345'],\n  ['Central African Republic (République centrafricaine)', 'cf', '236'],\n  ['Chad (Tchad)', 'td', '235'],\n  ['Chile', 'cl', '56'],\n  ['China (中国)', 'cn', '86'],\n  ['Christmas Island', 'cx', '61', 2],\n  ['Cocos (Keeling) Islands', 'cc', '61', 1],\n  ['Colombia', 'co', '57'],\n  ['Comoros (‫جزر القمر‬‎)', 'km', '269'],\n  ['Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)', 'cd', '243'],\n  ['Congo (Republic) (Congo-Brazzaville)', 'cg', '242'],\n  ['Cook Islands', 'ck', '682'],\n  ['Costa Rica', 'cr', '506'],\n  ['Côte d’Ivoire', 'ci', '225'],\n  ['Croatia (Hrvatska)', 'hr', '385'],\n  ['Cuba', 'cu', '53'],\n  ['Curaçao', 'cw', '599', 0],\n  ['Cyprus (Κύπρος)', 'cy', '357'],\n  ['Czech Republic (Česká republika)', 'cz', '420'],\n  ['Denmark (Danmark)', 'dk', '45'],\n  ['Djibouti', 'dj', '253'],\n  ['Dominica', 'dm', '1767'],\n  [\n    'Dominican Republic (República Dominicana)',\n    'do',\n    '1',\n    2,\n    ['809', '829', '849'],\n  ],\n  ['Ecuador', 'ec', '593'],\n  ['Egypt (‫مصر‬‎)', 'eg', '20'],\n  ['El Salvador', 'sv', '503'],\n  ['Equatorial Guinea (Guinea Ecuatorial)', 'gq', '240'],\n  ['Eritrea', 'er', '291'],\n  ['Estonia (Eesti)', 'ee', '372'],\n  ['Ethiopia', 'et', '251'],\n  ['Falkland Islands (Islas Malvinas)', 'fk', '500'],\n  ['Faroe Islands (Føroyar)', 'fo', '298'],\n  ['Fiji', 'fj', '679'],\n  ['Finland (Suomi)', 'fi', '358', 0],\n  ['France', 'fr', '33'],\n  ['French Guiana (Guyane française)', 'gf', '594'],\n  ['French Polynesia (Polynésie française)', 'pf', '689'],\n  ['Gabon', 'ga', '241'],\n  ['Gambia', 'gm', '220'],\n  ['Georgia (საქართველო)', 'ge', '995'],\n  ['Germany (Deutschland)', 'de', '49'],\n  ['Ghana (Gaana)', 'gh', '233'],\n  ['Gibraltar', 'gi', '350'],\n  ['Greece (Ελλάδα)', 'gr', '30'],\n  ['Greenland (Kalaallit Nunaat)', 'gl', '299'],\n  ['Grenada', 'gd', '1473'],\n  ['Guadeloupe', 'gp', '590', 0],\n  ['Guam', 'gu', '1671'],\n  ['Guatemala', 'gt', '502'],\n  ['Guernsey', 'gg', '44', 1],\n  ['Guinea (Guinée)', 'gn', '224'],\n  ['Guinea-Bissau (Guiné Bissau)', 'gw', '245'],\n  ['Guyana', 'gy', '592'],\n  ['Haiti', 'ht', '509'],\n  ['Honduras', 'hn', '504'],\n  ['Hong Kong (香港)', 'hk', '852'],\n  ['Hungary (Magyarország)', 'hu', '36'],\n  ['Iceland (Ísland)', 'is', '354'],\n  ['India (भारत)', 'in', '91'],\n  ['Indonesia', 'id', '62'],\n  ['Iran (‫ایران‬‎)', 'ir', '98'],\n  ['Iraq (‫العراق‬‎)', 'iq', '964'],\n  ['Ireland', 'ie', '353'],\n  ['Isle of Man', 'im', '44', 2],\n  ['Israel (‫ישראל‬‎)', 'il', '972'],\n  ['Italy (Italia)', 'it', '39', 0],\n  ['Jamaica', 'jm', '1876'],\n  ['Japan (日本)', 'jp', '81'],\n  ['Jersey', 'je', '44', 3],\n  ['Jordan (‫الأردن‬‎)', 'jo', '962'],\n  ['Kazakhstan (Казахстан)', 'kz', '7', 1],\n  ['Kenya', 'ke', '254'],\n  ['Kiribati', 'ki', '686'],\n  ['Kosovo', 'xk', '383'],\n  ['Kuwait (‫الكويت‬‎)', 'kw', '965'],\n  ['Kyrgyzstan (Кыргызстан)', 'kg', '996'],\n  ['Laos (ລາວ)', 'la', '856'],\n  ['Latvia (Latvija)', 'lv', '371'],\n  ['Lebanon (‫لبنان‬‎)', 'lb', '961'],\n  ['Lesotho', 'ls', '266'],\n  ['Liberia', 'lr', '231'],\n  ['Libya (‫ليبيا‬‎)', 'ly', '218'],\n  ['Liechtenstein', 'li', '423'],\n  ['Lithuania (Lietuva)', 'lt', '370'],\n  ['Luxembourg', 'lu', '352'],\n  ['Macau (澳門)', 'mo', '853'],\n  ['Macedonia (FYROM) (Македонија)', 'mk', '389'],\n  ['Madagascar (Madagasikara)', 'mg', '261'],\n  ['Malawi', 'mw', '265'],\n  ['Malaysia', 'my', '60'],\n  ['Maldives', 'mv', '960'],\n  ['Mali', 'ml', '223'],\n  ['Malta', 'mt', '356'],\n  ['Marshall Islands', 'mh', '692'],\n  ['Martinique', 'mq', '596'],\n  ['Mauritania (‫موريتانيا‬‎)', 'mr', '222'],\n  ['Mauritius (Moris)', 'mu', '230'],\n  ['Mayotte', 'yt', '262', 1],\n  ['Mexico (México)', 'mx', '52'],\n  ['Micronesia', 'fm', '691'],\n  ['Moldova (Republica Moldova)', 'md', '373'],\n  ['Monaco', 'mc', '377'],\n  ['Mongolia (Монгол)', 'mn', '976'],\n  ['Montenegro (Crna Gora)', 'me', '382'],\n  ['Montserrat', 'ms', '1664'],\n  ['Morocco (‫المغرب‬‎)', 'ma', '212', 0],\n  ['Mozambique (Moçambique)', 'mz', '258'],\n  ['Myanmar (Burma) (မြန်မာ)', 'mm', '95'],\n  ['Namibia (Namibië)', 'na', '264'],\n  ['Nauru', 'nr', '674'],\n  ['Nepal (नेपाल)', 'np', '977'],\n  ['Netherlands (Nederland)', 'nl', '31'],\n  ['New Caledonia (Nouvelle-Calédonie)', 'nc', '687'],\n  ['New Zealand', 'nz', '64'],\n  ['Nicaragua', 'ni', '505'],\n  ['Niger (Nijar)', 'ne', '227'],\n  ['Nigeria', 'ng', '234'],\n  ['Niue', 'nu', '683'],\n  ['Norfolk Island', 'nf', '672'],\n  ['North Korea (조선 민주주의 인민 공화국)', 'kp', '850'],\n  ['Northern Mariana Islands', 'mp', '1670'],\n  ['Norway (Norge)', 'no', '47', 0],\n  ['Oman (‫عُمان‬‎)', 'om', '968'],\n  ['Pakistan (‫پاکستان‬‎)', 'pk', '92'],\n  ['Palau', 'pw', '680'],\n  ['Palestine (‫فلسطين‬‎)', 'ps', '970'],\n  ['Panama (Panamá)', 'pa', '507'],\n  ['Papua New Guinea', 'pg', '675'],\n  ['Paraguay', 'py', '595'],\n  ['Peru (Perú)', 'pe', '51'],\n  ['Philippines', 'ph', '63'],\n  ['Poland (Polska)', 'pl', '48'],\n  ['Portugal', 'pt', '351'],\n  ['Puerto Rico', 'pr', '1', 3, ['787', '939']],\n  ['Qatar (‫قطر‬‎)', 'qa', '974'],\n  ['Réunion (La Réunion)', 're', '262', 0],\n  ['Romania (România)', 'ro', '40'],\n  ['Russia (Россия)', 'ru', '7', 0],\n  ['Rwanda', 'rw', '250'],\n  ['Saint Barthélemy (Saint-Barthélemy)', 'bl', '590', 1],\n  ['Saint Helena', 'sh', '290'],\n  ['Saint Kitts and Nevis', 'kn', '1869'],\n  ['Saint Lucia', 'lc', '1758'],\n  ['Saint Martin (Saint-Martin (partie française))', 'mf', '590', 2],\n  ['Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)', 'pm', '508'],\n  ['Saint Vincent and the Grenadines', 'vc', '1784'],\n  ['Samoa', 'ws', '685'],\n  ['San Marino', 'sm', '378'],\n  ['São Tomé and Príncipe (São Tomé e Príncipe)', 'st', '239'],\n  ['Saudi Arabia (‫المملكة العربية السعودية‬‎)', 'sa', '966'],\n  ['Senegal (Sénégal)', 'sn', '221'],\n  ['Serbia (Србија)', 'rs', '381'],\n  ['Seychelles', 'sc', '248'],\n  ['Sierra Leone', 'sl', '232'],\n  ['Singapore', 'sg', '65'],\n  ['Sint Maarten', 'sx', '1721'],\n  ['Slovakia (Slovensko)', 'sk', '421'],\n  ['Slovenia (Slovenija)', 'si', '386'],\n  ['Solomon Islands', 'sb', '677'],\n  ['Somalia (Soomaaliya)', 'so', '252'],\n  ['South Africa', 'za', '27'],\n  ['South Korea (대한민국)', 'kr', '82'],\n  ['South Sudan (‫جنوب السودان‬‎)', 'ss', '211'],\n  ['Spain (España)', 'es', '34'],\n  ['Sri Lanka (ශ්‍රී ලංකාව)', 'lk', '94'],\n  ['Sudan (‫السودان‬‎)', 'sd', '249'],\n  ['Suriname', 'sr', '597'],\n  ['Svalbard and Jan Mayen', 'sj', '47', 1],\n  ['Swaziland', 'sz', '268'],\n  ['Sweden (Sverige)', 'se', '46'],\n  ['Switzerland (Schweiz)', 'ch', '41'],\n  ['Syria (‫سوريا‬‎)', 'sy', '963'],\n  ['Taiwan (台灣)', 'tw', '886'],\n  ['Tajikistan', 'tj', '992'],\n  ['Tanzania', 'tz', '255'],\n  ['Thailand (ไทย)', 'th', '66'],\n  ['Timor-Leste', 'tl', '670'],\n  ['Togo', 'tg', '228'],\n  ['Tokelau', 'tk', '690'],\n  ['Tonga', 'to', '676'],\n  ['Trinidad and Tobago', 'tt', '1868'],\n  ['Tunisia (‫تونس‬‎)', 'tn', '216'],\n  ['Turkey (Türkiye)', 'tr', '90'],\n  ['Turkmenistan', 'tm', '993'],\n  ['Turks and Caicos Islands', 'tc', '1649'],\n  ['Tuvalu', 'tv', '688'],\n  ['U.S. Virgin Islands', 'vi', '1340'],\n  ['Uganda', 'ug', '256'],\n  ['Ukraine (Україна)', 'ua', '380'],\n  ['United Arab Emirates (‫الإمارات العربية المتحدة‬‎)', 'ae', '971'],\n  ['United Kingdom', 'gb', '44', 0],\n  ['United States', 'us', '1', 0],\n  ['Uruguay', 'uy', '598'],\n  ['Uzbekistan (Oʻzbekiston)', 'uz', '998'],\n  ['Vanuatu', 'vu', '678'],\n  ['Vatican City (Città del Vaticano)', 'va', '39', 1],\n  ['Venezuela', 've', '58'],\n  ['Vietnam (Việt Nam)', 'vn', '84'],\n  ['Wallis and Futuna', 'wf', '681'],\n  ['Western Sahara (‫الصحراء الغربية‬‎)', 'eh', '212', 1],\n  ['Yemen (‫اليمن‬‎)', 'ye', '967'],\n  ['Zambia', 'zm', '260'],\n  ['Zimbabwe', 'zw', '263'],\n  ['Åland Islands', 'ax', '358', 1],\n];\n\nlet countries;\n\nfunction _formatCountriesData(countriesData) {\n  return countriesData.map(country => ({\n    name: country[0],\n    iso2: country[1],\n    dialCode: country[2],\n    priority: country[3] || 0,\n    areaCodes: country[4] || null,\n  }));\n}\n\nfunction initialize(externalCountriesList) {\n  countries = _formatCountriesData(\n    externalCountriesList || defaultCountriesData\n  );\n}\n\nfunction getCountries() {\n  if (!countries) {\n    initialize();\n  }\n\n  return countries;\n}\n\nconst AllCountries = {\n  initialize,\n  getCountries,\n};\n\nexport default AllCountries;\n"],"mappings":"AAyVA","sourceRoot":""}